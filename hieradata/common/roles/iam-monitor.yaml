---
include:
  default:
    - profile::monitoring::graphite
    - profile::monitoring::grafana
    - profile::monitoring::sensu::backend

named_interfaces::config:
  mgmt:
    - eth0
  core:
    - eth0
  uib:
    - eth1

# Graphite and grafana
profile::monitoring::graphite::manage_graphite:   true
profile::monitoring::graphite::manage_firewall:   true
profile::monitoring::graphite::age:               '2w'
profile::monitoring::grafana::enable:             true
profile::monitoring::grafana::manage_firewall:    true
profile::monitoring::grafana::firewall_extras:
  source: "%{::network_mgmt1}/%{::netmask_mgmt1}"
grafana::version: latest

# sensu cluster
sensu::backend::config_hash:
  api-listen-address:               "%{::ipaddress_mgmt1}:8082"
  agent-host:                       "%{::ipaddress_mgmt1}"
  agent-port:                       8081
  log-level:                        debug
  etcd-advertise-client-urls:       "http://%{::ipaddress_mgmt1}:2379"
  etcd-listen-client-urls:          "http://%{::ipaddress_mgmt1}:2379"
  etcd-listen-peer-urls:            'http://0.0.0.0:2380'
  etcd-initial-cluster:             "%{hiera('sensu_etcd_cluster')}"
  etcd-initial-advertise-peer-urls: "http://%{::ipaddress_mgmt1}:2380"
  etcd-initial-cluster-state:       'new'
  etcd-initial-cluster-token:       '%{::location}-sensu-etcd-cluster'
  etcd-name:                        "%{::hostname}"

# Use self as backend for iam-monitor
sensu::agent::backends:   ["%{::fqdn}:8081"]
sensu::api_host:          "%{::fqdn}"

# sensu go backend
profile::monitoring::sensu::backend::manage_dashboard:  true
profile::monitoring::sensu::backend::manage_firewall:   true
profile::monitoring::sensu::backend::manage:            true
profile::monitoring::sensu::backend::firewall_ports:    [8081, 3000, 8082, 2379, 2380]

profile::monitoring::sensu::agent::bonsai_assets:
  sensu/sensu-slack-handler:
    version: 1.4.0
    namespace: "%{hiera('sensu_namespace')}"
  sensu/sensu-go-graphite-handler:
    version: 0.5.2
    namespace: "%{hiera('sensu_namespace')}"

profile::monitoring::sensu::backend::handlers:
  default:
    namespace:      "%{hiera('sensu_namespace')}"
    type:           'set'
    handlers:
      - slack
  keepalive:
    namespace: "%{hiera('sensu_namespace')}"
    type: 'set'
    handlers:
      - default
  slack:
    namespace:      "%{hiera('sensu_namespace')}"
    type:           'pipe'
    env_vars:       ["SLACK_WEBHOOK_URL=%{hiera('slack_webhook')}"]
    command:        "sensu-slack-handler --channel '#iam' --webhook-url ${SLACK_WEBHOOK_URL}"
    runtime_assets:
      - sensu/sensu-slack-handler
    filters:
      - is_incident
      - not_silenced
      - hourly
    timeout: 0
  graphite_udp:
    namespace:      "%{hiera('sensu_namespace')}"
    type:           'udp'
    socket:
      host:         '127.0.0.1'
      port:         2003
    mutator:        'only_check_output'
    filters:
      - has_metrics
    timeout: 10
  graphite:
    ensure:     present
    namespace:  "%{hiera('sensu_namespace')}"
    type: pipe
    command: sensu-go-graphite-handler --host 127.0.0.1 --port 2003 --prefix sensu #--no-prefix
    filters:
      - has_metrics
    runtime_assets:
      - sensu/sensu-go-graphite-handler
    timeout: 10

# needed for sensu web
profile::base::common::manage_sysctl: true
profile::base::common::sysctl_values:
  'fs.inotify.max_user_watches':
    value: 524288

sensu::resources::filters:
  hourly:
    ensure: present
    action: allow
    expressions:
      - 'event.check.occurrences == 1 || event.check.occurrences % (3600 / event.check.interval) == 0'

# sensu go agent
profile::monitoring::sensu::agent::enable_go_agent:     true
profile::monitoring::sensu::agent::purge_check:         true
profile::monitoring::sensu::agent::merge_strategy:      'first'
profile::monitoring::sensu::agent::checks:
  cpu-checks:
    ensure:                 present
    command:                'check-cpu.rb -w 70 -c 90'
    interval:               60
    subscriptions:          ['base']
    namespace:              "%{hiera('sensu_namespace')}"
    handlers:               ['default']

profile::base::yumrepo::repo_hash:
  sensu:
    ensure: absent
  sensu-community:
    ensure: present
  grafana-oss:
    ensure: present
  yarn:
    ensure: present
  nodesource-14: # this repo will break statsd, use sensu statsd instead
    ensure: present
  epel: # should be absent when using RDO, but whitelist can also work
    ensure: present
  postgres-10: # we need postgresql libs
    ensure: present
