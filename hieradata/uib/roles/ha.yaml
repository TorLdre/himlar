---
corosync::unicast_addresses:
  - "%{hiera('netcfg_public_netpart')}.96"
  - "%{hiera('netcfg_public_netpart')}.97"

corosync::quorum_members:
  - "%{hiera('netcfg_public_netpart')}.96"
  - "%{hiera('netcfg_public_netpart')}.97"

corosync_cluster_node1:   "%{::location}-ha-01.%{hiera('domain_mgmt')}"
corosync_cluster_node2:   "%{::location}-ha-02.%{hiera('domain_mgmt')}"

corosync_cluster_vip1:    "%{hiera('netcfg_public_netpart')}.200"
corosync_cluster_vip2:    "%{hiera('netcfg_public_netpart')}.201"
corosync_cluster_vip3:    "%{hiera('netcfg_public_netpart')}.91"
corosync_cluster_vip4:    "%{hiera('netcfg_public_netpart')}.114"

# Firewall
profile::firewall::rules::custom_rules:
  '451 haproxy http for public vip1':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    destination:  "%{hiera('corosync_cluster_vip1')}"
  '452 haproxy http for public vip2':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    destination:  "%{hiera('corosync_cluster_vip2')}"
  '453 haproxy http for internal vip3':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    source:       '129.177.0.0/16'
    destination:  "%{hiera('corosync_cluster_vip3')}"
  '454 haproxy http for internal vip4':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    source:       '129.177.0.0/16'
    destination:  "%{hiera('corosync_cluster_vip4')}"
  '455 haproxy status':
    proto:        'tcp'
    dport:        ['9000']
    source:       '129.177.10.0/24'
    destination:
      - "%{hiera('corosync_cluster_vip4')}"
      - "%{hiera('corosync_cluster_vip3')}"

# HAproxy
haproxy::defaults_options:
  log:          'global'
  stats:        []
  option:       ['dontlognull']
  timeout:
    - 'connect 10s'
    - 'client 10s'
    - 'server 10s'

profile::highavailability::loadbalancing::haproxy::haproxy_backends:
  bk_https_test: {}

#profile::highavailability::loadbalancing::haproxy::haproxy_mapfile:

profile::highavailability::loadbalancing::haproxy::haproxy_frontends:
  uib-http:
    mode: 'http'
    bind:
      "0.0.0.0:80": []
    options:
      acl:          'uib_src src 129.177.0.0/16'
      http-request:
        - 'allow if uib_src'
  uib-https:
    mode: 'tcp'
    bind:
      "0.0.0.0:443": []
    options:
      acl:          'uib_src src 129.177.0.0/16'
      tcp-request:
        - 'inspect-delay 2s'
        - 'content accept if uib_src'
      use_backend:  bk_https_test

#      option:       'socket-stats'
#      tcp-request:
#        - 'inspect-delay 5s'
#        - 'content accept if { req_ssl_hello_type 1 }'
#      use_backend:  '%[req.hdr(host),lower,map(/etc/haproxy/uib_domains.map,bk_default)]'

profile::highavailability::loadbalancing::haproxy::haproxy_balancermembers:
  'https_test':
    listening_service:  'bk_https_test'
    ports:              443
    server_names:       ['osl-dashboard-01', 'bgo-dashboard-01']
    ipaddresses:        [158.37.63.254, 158.39.77.254]
    options:            'check'

# Corosync VIP and HAproxy
profile::highavailability::corosync::primitives:
  'pubip1':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip1')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'pubip2':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip2')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'uibip1':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip3')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'uibip2':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip4')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'haproxy':
    'primitive_class':    'systemd'
    'primitive_type':     'haproxy'
    'operations':
      'monitor':          { 'interval': '5s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }

profile::highavailability::corosync::locations:
  'pubip_location1':
    primitive:  'pubip1'
    node_name:  "%hiera('corosync_cluster_node1')"
    score:      'INFINITY'
  'pubip_location2':
    primitive:  'pubip2'
    node_name:  "%hiera('corosync_cluster_node2')"
    score:      'INFINITY'
  'uibip_location1':
    primitive:  'uibip1'
    node_name:  "%hiera('corosync_cluster_node1')"
    score:      'INFINITY'
  'uibip_location2':
    primitive:  'uibip2'
    node_name:  "%hiera('corosync_cluster_node2')"
    score:      'INFINITY'

profile::highavailability::corosync::colocations:
  'pubip1_haproxy':
    primitives:   ['clone_haproxy', 'pubip1']
  'pubip2_haproxy':
    primitives:   ['clone_haproxy', 'pubip2']
  'uibip1_haproxy':
    primitives:   ['clone_haproxy', 'uibip1']
  'uibip2_haproxy':
    primitives:   ['clone_haproxy', 'uibip2']
