---
named_interfaces::config:
  mgmt:
    - eth0
  public:
    - eth1

corosync::cluster_name:   '%{::location}-ha-test'
corosync::unicast_addresses:
  - "%{hiera('netcfg_public2_netpart')}.190"
  - "%{hiera('netcfg_public2_netpart')}.191"

corosync::quorum_members:
  - "%{hiera('netcfg_public2_netpart')}.190"
  - "%{hiera('netcfg_public2_netpart')}.191"

corosync_cluster_node1:   "%{::location}-ha-test-01.%{hiera('domain_mgmt')}"
corosync_cluster_node2:   "%{::location}-ha-test-02.%{hiera('domain_mgmt')}"

corosync_cluster_vip1:    "%{hiera('netcfg_public2_netpart')}.34"  # pubtestproxy.ha
corosync_cluster_vip2:    "%{hiera('netcfg_public2_netpart')}.35"  # pubtestproxy.ha
corosync_cluster_vip3:    "%{hiera('netcfg_public2_netpart')}.243" # uibtestproxy.ha
corosync_cluster_vip4:    "%{hiera('netcfg_public2_netpart')}.244" # uibtestproxy.ha
corosync_cluster_vip5:    "%{hiera('netcfg_public2_netpart')}.245" # ssltestproxy.ha
corosync_cluster_vip6:    "%{hiera('netcfg_public2_netpart')}.198" # ssltestproxy.ha

# dummy cert, change with correct to test valid certs!
ssl_cert_apps:          'appstest.uib.no.pem'
ssl_cert_apps_admin:    'appstest-admin.uib.no.pem'
ssl_cert_nrec_docs:     'appstest.uib.no.pem'
ssl_cert_nrec_www:      'appstest.uib.no.pem'
ssl_cert_nrec:          'appstest.uib.no.pem'

haproxy::global_options:
  log:          '127.0.0.1 local6 info alert'
  #nbproc:       '2'
  #cpu-map:      ['1 0', '2 2']
  maxconn:      '2000' # per core
  crt-base:     '/etc/pki/tls/certs'
  tune.ssl.default-dh-param:  2048
  ssl-default-bind-options:   'no-sslv3 no-tls-tickets no-tlsv10 no-tlsv11'
  ssl-default-bind-ciphers:   'ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS'
  ssl-default-server-options: 'no-sslv3 no-tls-tickets no-tlsv10 no-tlsv11'
  ssl-default-server-ciphers: 'ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS'

#
# FIXME testing!!!
#
profile::highavailability::loadbalancing::haproxy::merge_strategy: 'first'
profile::highavailability::loadbalancing::haproxy::haproxy_mapfile:
  uib_https_domains:
    ensure: present
    mappings:
      - 'exch.uib.no':                            'uib-https-exch'
      - 'portal.uib.no':                          'uib-https-adm'
  uib_http_domains:
    ensure: present
    mappings:
      - 'portal.uib.no':                          'uib-http-adm'
  public_https_domains:
    ensure: present
    mappings:
      - 'report.uh-iaas.no':                      'public-https-uh-report'
      - 'status.uh-iaas.no':                      'public-https-uh-status'
      - 'report.nrec.no':                         'public-https-uh-report'
      - 'status.nrec.no':                         'public-https-uh-status'
  public_http_domains:
    ensure: present
    mappings:
      - 'docs.uh-iaas.no':                        'public-http-uh-docs'
      - 'report.uh-iaas.no':                      'public-http-nrec-redirect'
      - 'status.uh-iaas.no':                      'public-http-nrec-redirect'
      - 'report.nrec.no':                         'public-http-nrec-redirect'
      - 'status.nrec.no':                         'public-http-nrec-redirect'
  ssl_https_domains:
    ensure: present
    mappings:
      - 'apps.uib.no':                            'ssl-https-apps'
      - 'appstest.uib.no':                        'ssl-https-apps'
      - 'apps-admin.uib.no':                      'ssl-https-apps-admin'
      - 'appstest-admin.uib.no':                  'ssl-https-apps-admin'
      - 'docs.nrec.no':                           'ssl-https-nrec-docs'
      - 'www.nrec.no':                            'ssl-https-nrec-www'
      - 'nrec.no':                                'ssl-https-nrec-www'
  ssl_http_domains:
    ensure: present
    mappings:
      - 'apps.uib.no':                            'ssl-http-apps'
      - 'appsanywhere.uib.no':                    'ssl-http-apps'
      - 'apps-admin.uib.no':                      'ssl-http-apps'
      - 'appstest-admin.uib.no':                  'ssl-http-apps'
      - 'docs.nrec.no':                           'public-http-nrec-redirect'
      - 'www.nrec.no':                            'public-http-nrec-redirect'
      - 'nrec.no':                                'public-http-nrec-redirect'

profile::highavailability::loadbalancing::haproxy::haproxy_balancermembers:
# NREC
  'public-https-uh-status':
    listening_service:  'public-https-uh-status'
    ports:              443
    server_names:       ['status-osl', 'status-bgo']
    ipaddresses:        ['158.37.63.250', '158.39.77.250']
    options:            'verify none inter 1000 check check-ssl'
  'public-https-uh-report':
    listening_service:  'public-https-uh-report'
    ports:              443
    server_names:       ['report-osl', 'report-bgo']
    ipaddresses:        ['158.37.63.250', '158.39.77.250']
    options:            'verify none inter 1000 check check-ssl'
  'ssl-https-nrec-www':
    listening_service:  'ssl-https-nrec-www'
    ports:              443
    server_names:       ['www01']
    ipaddresses:        ['norcams.github.io']
    options:            'verify none inter 1000 check check-ssl ssl'
  'ssl-https-nrec-docs':
    listening_service:  'ssl-https-nrec-docs'
    ports:              443
    server_names:       ['docs01']
    ipaddresses:        ['uh-iaas.readthedocs.io']
    options:            'verify none inter 1000 check check-ssl ssl'
# Apps
  'ssl-https-apps':
    listening_service:  'ssl-https-apps'
    ports:              443
    server_names:       ['apps-test05.uib.no', 'apps-test06.uib.no']
    ipaddresses:        ['129.177.150.203', '129.177.150.204']
    options:            'verify none inter 120s check check-ssl ssl'
  'ssl-https-apps-admin':
    listening_service:  'ssl-https-apps-admin'
    ports:              443
    server_names:       ['apps-test02.uib.no']
    ipaddresses:        ['129.177.30.16']
    options:             'verify none inter 120s check check-ssl ssl'
# Exchange
  'uib-https-exch':
    listening_service:  'uib-https-exch'
    ports:              443
    server_names:       ['exchange01.uib.no', 'exchange02.uib.no']
    ipaddresses:        ['129.177.14.178','129.177.14.179']
    options:            'check'
# Portal
  'uib-https-adm':
    listening_service:  'uib-https-adm'
    ports:              443
    server_names:       ['rd-web01.uib.no', 'rd-web02.uib.no']
    ipaddresses:        ['129.177.14.13', '129.177.14.182']
    options:
      - 'check'
  'uib-http-adm':
    listening_service:  'uib-http-adm'
    ports:              80
    server_names:       ['rd-web01.uib.no', 'rd-web02.uib.no']
    ipaddresses:        ['129.177.14.13', '129.177.14.182']
    options:
      - 'check'
# LDAP
  'public-ldap-prod':
    listening_service:  'public-ldap-prod'
    ports:              '389'
    server_names:       ['p1ldap01.uib.no', 'p2ldap01.uib.no', 'p1ldap02.uib.no', 'p2ldap02.uib.no']
    ipaddresses:        ['129.177.5.229', '129.177.5.230', '129.177.5.234', '129.177.5.236']
    options:
      - 'check'
  'public-ldaps-prod':
    listening_service:  'public-ldaps-prod'
    ports:              '636'
    server_names:       ['p1ldap01.uib.no', 'p2ldap01.uib.no', 'p1ldap02.uib.no', 'p2ldap02.uib.no']
    ipaddresses:        ['129.177.5.229', '129.177.5.230', '129.177.5.234', '129.177.5.236']
    options:
      - 'check'
  'uib-ldap-test':
    listening_service:  'uib-ldap-test'
    ports:              '389'
    server_names:       ['t1ldap01.uib.no']
    ipaddresses:        ['129.177.5.183']
    options:
      - 'check'
  'uib-ldaps-test':
    listening_service:  'uib-ldaps-test'
    ports:              '636'
    server_names:       ['t1ldap01.uib.no']
    ipaddresses:        ['129.177.5.183']
    options:
      - 'check'

profile::highavailability::loadbalancing::haproxy::haproxy_backends:
  # Apps
  public-https-apps-gw:
    mode:             'tcp'
    options:
      - balance:      'source'
      - http-check: 'expect status 200'
      # Session stick table and based on source IP
      - stick-table: 'type ip size 1m expire 1h'
      - stick: 'on src'
      - timeout:
        - 'server 1m'
        - 'queue 1m'
  ssl-https-apps-admin:
    mode:             'http'
    options:
      - balance:      'leastconn'
      - option:
        - 'forwardfor except 127.0.0.1'
        - 'httpchk GET /jukeboxserver/do/license/token/renew.tok?msid=ping'
      - http-check: 'expect status 200'
      # Session stick table and based on source IP
      - stick-table: 'type ip size 1m expire 1h'
      - stick: 'on src'
      - timeout:
        - 'server 1m'
        - 'queue 1m'
  ssl-https-apps:
    mode:             'http'
    options:
      - balance:      'leastconn'
      - option:
        - 'forwardfor except 127.0.0.1'
        - 'httpchk GET /healthcheck'
      - http-check: 'expect status 200'
      # Session stick table and based on source IP
      - stick-table: 'type ip size 1m expire 1h'
      - stick: 'on src'
      - timeout:
        - 'server 1m'
        - 'queue 1m'
  ssl-http-apps:
    mode:             'http'
    options:
      - balance:      'roundrobin'
      - redirect:     'scheme https if !{ ssl_fc }'
  # NREC
  ssl-https-nrec-www:
    mode:             'http'
    options:
      - balance:      'source'
      - option:
        - 'forwardfor except 127.0.0.1'
      - http-request:
        - 'set-header Host norcams.github.io'
  ssl-https-nrec-docs:
    mode:             'http'
    options:
      - balance:      'source'
      - option:
        - 'forwardfor except 127.0.0.1'
      - http-request:
        - 'set-header Host uh-iaas.readthedocs.io'
  public-http-nrec-redirect:
    mode:             'http'
    options:
      - balance:      'roundrobin'
      - redirect:     'scheme https if !{ ssl_fc }'
  public-http-uh-docs:
    mode:             'http'
    options:
      - redirect:     'code 301 location https://docs.nrec.no'
  public-https-uh-status:
    mode:             'tcp'
    options:
      - balance:      'source'
      - option:
        - 'httpchk HEAD /api/health HTTP/1.1\r\nHost:\ status.uh-iaas.no'
  public-https-uh-report:
    mode:             'tcp'
    options:
      - balance:      'source'
      - option:
        - 'httpchk HEAD /health HTTP/1.1\r\nHost:\ report.uh-iaas.no'
  #LDAP
  public-ldap-prod:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  public-ldaps-prod:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  uib-ldap-test:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  uib-ldaps-test:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  # Exchange
  uib-https-exch:
    mode:             'tcp'
    options:
      - balance:      'source'
  # Portal
  uib-https-adm:
    mode:             'tcp'
    options:
      - balance:      'roundrobin'
      - tcp-request:  'content reject if { src -f /etc/haproxy/uib_vpn_net.list }'
  uib-http-adm:
    mode:             'tcp'
    options:
      - balance:      'roundrobin'
      - tcp-request:  'content reject if { src -f /etc/haproxy/uib_vpn_net.list }'


#
# Temp: fix apps-admin cert
#
profile::highavailability::loadbalancing::haproxy::haproxy_frontends:
  public-http:
    mode:               'http'
    bind:
      "%{hiera('corosync_cluster_vip1')}:80": []
      "%{hiera('corosync_cluster_vip2')}:80": []
    options:
      - option:         'httplog'
      - use_backend:    '%[req.hdr(host),lower,map(/etc/haproxy/public_http_domains.map)]'
      - capture:        'request header Host len 32' #for debug
  public-https:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip1')}:443": []
      "%{hiera('corosync_cluster_vip2')}:443": []
    options:
      - option:         'tcplog'
      - tcp-request:
        - 'inspect-delay 5s'
        - 'content accept if { req_ssl_hello_type 1 }'
      - use_backend:      '%[req_ssl_sni,lower,map(/etc/haproxy/public_https_domains.map)]'
  public-ldap:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip1')}:389": []
      "%{hiera('corosync_cluster_vip2')}:389": []
    options:
      - option:         'tcplog'
      - use_backend:    'public-ldap-prod'
  public-ldaps:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip1')}:636": []
      "%{hiera('corosync_cluster_vip2')}:636": []
    options:
      - option:         'tcplog'
      - use_backend:    'public-ldaps-prod'
  uib-http:
    mode:               'http'
    bind:
      "%{hiera('corosync_cluster_vip3')}:80": []
      "%{hiera('corosync_cluster_vip4')}:80": []
    options:
      - maxconn:        '16000' # max internal http connections
      - option:         'httplog'
      - use_backend:    '%[req.hdr(host),lower,map(/etc/haproxy/uib_http_domains.map)]'
      - capture:        'request header Host len 32' #for debug
  uib-https:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip3')}:443": []
      "%{hiera('corosync_cluster_vip4')}:443": []
    options:
      - maxconn:        '16000' # max internal https connections
      - option:         'tcplog'
      - tcp-request:
        - 'inspect-delay 5s'
        - 'content accept if { req_ssl_hello_type 1 }'
      - use_backend:      '%[req_ssl_sni,lower,map(/etc/haproxy/uib_https_domains.map)]'
  uib-ldap:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip3')}:389": []
      "%{hiera('corosync_cluster_vip4')}:389": []
    options:
      - option:         'tcplog'
      - use_backend:    'uib-ldap-test'
  uib-ldaps:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip3')}:636": []
      "%{hiera('corosync_cluster_vip4')}:636": []
    options:
      - option:         'tcplog'
      - use_backend:    'uib-ldaps-test'
  ssl-http: #for redirect
    mode:               'http'
    bind:
      "%{hiera('corosync_cluster_vip5')}:80": []
      "%{hiera('corosync_cluster_vip6')}:80": []
    options:
      - option:         'httplog'
      - use_backend:    '%[req.hdr(host),lower,map(/etc/haproxy/ssl_http_domains.map)]'
      - capture:        'request header Host len 32' #for debug
  ssl-https:
    mode:               'http'
    bind:
      "%{hiera('corosync_cluster_vip5')}:443":
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_apps')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_apps_admin')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec_www')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec_docs')}"
      "%{hiera('corosync_cluster_vip6')}:443":
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_apps')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_apps_admin')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec_www')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec_docs')}"
    options:
      - option:         'http-server-close'
      - option:         'forwardfor'
      - use_backend:    '%[req.hdr(host),lower,map(/etc/haproxy/ssl_https_domains.map)]'
      # Prevents X-Forwarded-For spoofing
      - http-request:   'del-header ^X-Forwarded-For:.*'
      # - http-request:
      #   - 'add-header X-Forwarded-Proto https if { ssl_fc }'
      #   - 'set-header X-Forwarded-Port %[dst_port]'
