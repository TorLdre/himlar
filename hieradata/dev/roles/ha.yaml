---
corosync::unicast_addresses:
  - "%{hiera('netcfg_public_netpart')}.16"
  - "%{hiera('netcfg_public_netpart')}.17"

corosync::quorum_members:
  - "%{hiera('netcfg_public_netpart')}.16"
  - "%{hiera('netcfg_public_netpart')}.17"

corosync_cluster_node1:   "%{::location}-ha-01.%{hiera('domain_mgmt')}"
corosync_cluster_node2:   "%{::location}-ha-02.%{hiera('domain_mgmt')}"

corosync_cluster_vip1:    "%{hiera('netcfg_public_netpart')}.6"
corosync_cluster_vip2:    "%{hiera('netcfg_public_netpart')}.7"
corosync_cluster_vip3:    "%{hiera('netcfg_public_netpart')}.8"
corosync_cluster_vip4:    "%{hiera('netcfg_public_netpart')}.9"

# Firewall rules
profile::firewall::rules::custom_rules:
  '451 haproxy http for public vip1':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    destination:  "%{hiera('corosync_cluster_vip1')}"
  '452 haproxy http for public vip2':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    destination:  "%{hiera('corosync_cluster_vip2')}"
  '453 haproxy http for internal vip3':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    source:       '0.0.0.0/0'
    destination:  "%{hiera('corosync_cluster_vip3')}"
  '454 haproxy http for internal vip4':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    source:       '0.0.0.0/0'
    destination:  "%{hiera('corosync_cluster_vip4')}"
  '455 haproxy status':
    proto:        'tcp'
    dport:        ['9000']
    source:       '0.0.0.0/0'
    destination:
      - "%{hiera('corosync_cluster_vip4')}"
      - "%{hiera('corosync_cluster_vip3')}"


# Example with mapping, frontend and backend

# Mapping: DNS -> backend
profile::highavailability::loadbalancing::haproxy::haproxy_mapfile:
  'openstack_domains':
    ensure: present
    mappings:
      - "monitor.%{hiera('domain_mgmt')}":     'bk_monitor'
      - "logger.%{hiera('domain_mgmt')}":      'bk_logger'

# Backends (servers are added with balancermember)
profile::highavailability::loadbalancing::haproxy::haproxy_backends:
  bk_monitor: {}
  bk_logger: {}

# Backend members
profile::highavailability::loadbalancing::haproxy::haproxy_balancermembers:
  'monitor':
    listening_service:  'bk_monitor'
    ports:              3000
    server_names:       ['%{::location}-monitor-01']
    ipaddresses:        ["%{hiera('netcfg_mgmt_netpart')}.14"]
    options:            'check'
  'logger':
    listening_service:  'bk_logger'
    ports:              5601
    server_names:       ['%{::location}-logger-01']
    ipaddresses:        ["%{hiera('netcfg_mgmt_netpart')}.13"]
    options:            'check'

# Frontend: backends are found from mapping file
profile::highavailability::loadbalancing::haproxy::haproxy_frontends:
  http-all:
    ipaddress:  '0.0.0.0'
    ports:      '80'
    options:
      use_backend: '%[req.hdr(host),lower,map(/etc/haproxy/openstack_domains.map,bk_default)]'
  https-all:
    ipaddress:  '0.0.0.0'
    ports:      '443'
    options:
      use_backend: '%[req.hdr(host),lower,map(/etc/haproxy/openstack_domains.map,bk_default)]'

# Corosync uib
# Corosync VIP and HAproxy
profile::highavailability::corosync::primitives:
  'pubip1':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip1')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'pubip2':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip2')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'uibip1':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip3')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'uibip2':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip4')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { "interval": "10s", "timeout": "20s" }
      'start':            { "interval": "0s", "timeout": "20s" }
      'stop':             { "interval": "0s", "timeout": "20s" }
  'haproxy':
    'primitive_class':    'systemd'
    'primitive_type':     'haproxy'
    'operations':
      'monitor':          { 'interval': '5s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }

profile::highavailability::corosync::locations:
  'pubip_location1':
    primitive:  'pubip1'
    node_name:  "%hiera('corosync_cluster_node1')"
    score:      'INFINITY'
  'pubip_location2':
    primitive:  'pubip2'
    node_name:  "%hiera('corosync_cluster_node2')"
    score:      'INFINITY'
  'uibip_location1':
    primitive:  'uibip1'
    node_name:  "%hiera('corosync_cluster_node1')"
    score:      'INFINITY'
  'uibip_location2':
    primitive:  'uibip2'
    node_name:  "%hiera('corosync_cluster_node2')"
    score:      'INFINITY'

profile::highavailability::corosync::colocations:
  'pubip1_haproxy':
    primitives:   ['clone_haproxy', 'pubip1']
  'pubip2_haproxy':
    primitives:   ['clone_haproxy', 'pubip2']
  'uibip1_haproxy':
    primitives:   ['clone_haproxy', 'uibip1']
  'uibip2_haproxy':
    primitives:   ['clone_haproxy', 'uibip2']
