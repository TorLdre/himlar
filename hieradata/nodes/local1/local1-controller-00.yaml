---
include:
  default:
    - profile::network::nat
    - profile::base::login

network::interfaces_hash:
  'em1':      # local1-mgmt
    onboot:         'yes'
    bridge:         'br0'
  'em1.11':   # local2-mgmt
    onboot:         'yes'
    bridge:         'br1'
    vlan:           'yes'
  'em1.100':  # local1-trp
    onboot:         'yes'
    bridge:         'br2'
    vlan:           'yes'
  'em1.101':  # local2-trp
    onboot:         'yes'
    bridge:         'br3'
    vlan:           'yes'
  'em1.200':  # bridge
    onboot:         'yes'
    bridge:         'br4'
    vlan:           'yes'
  'em1.1349': # uib
    vlan:           'yes'
    'enable_dhcp':  true
  'br0':
    ipaddress:    "%{hiera('netcfg_mgmt_netpart')}.99"
    netmask:      "%{hiera('netcfg_mgmt_netmask')}"
    gateway:      "%{hiera('netcfg_mgmt_gateway')}"
    defroute:     'yes' # FIXME
    onboot:       'yes'
    type:         'Bridge'
    peerdns:      'yes'
    dns1:         "%{hiera('netcfg_dns_server1')}"
    dns2:         "%{hiera('netcfg_dns_server2')}"
    domain:       "%{hiera('netcfg_dns_search')}"
  'br1':
    onboot:       'yes'
  'br2':
    defroute:     'no'
    onboot:       'yes'
    ipaddress:    "%{hiera('netcfg_trp_netpart')}.99"
    netmask:      "%{hiera('netcfg_trp_netmask')}"
    type:         'Bridge'
  'br3':
    onboot:       'yes'
  'br4':
    onboot:       'yes'
    type:         'Bridge'
    ipaddress:    '192.168.122.1'
    netmask:      '255.255.255.0'
    defroute:     'no'
    bridge_stp:   'off'

# route to public net via torack-01
profile::base::network::routes:
  'br4':
    'ipaddress': [ "%{hiera('netcfg_public_netpart')}.0", ]
    'netmask':   [ "%{hiera('netcfg_public_netmask')}", ]
    'gateway':   [ '192.168.122.2', ]
    'table':     [ 'main', ]
    'family':    [ 'inet4', ]

# NAT
profile::network::nat::enable_snat:  true
profile::network::nat::source:       "%{hiera('netcfg_public_netpart')}.0/%{hiera('netcfg_public_netmask')}"
profile::network::nat::outiface:     'em1.1349'

profile::network::services::ntp_server: false

named_interfaces::config:
  mgmt:
    - br0
  trp:
    - br1
  public:
    - em1.1349

# SSH access
accounts::accounts:
  'raymond':
    ensure: present

# SSH from everywhere
profile::firewall::pre::ssh_settings:
  source: "0.0.0.0/0"

googleauthenticator::pam::modules:
  sshd:
    mode: wheel-only

googleauthenticator::pam::mode::modes:
  wheel-only:
    condition: 'user ingroup wheel'
    nullok: false

ssh::server::options:
  # Need this for 2FA (saz-ssh-module disables by default)
  ChallengeResponseAuthentication: 'yes'
  # The second publickey is until the pam files are fixed
  AuthenticationMethods: 'publickey,keyboard-interactive:pam'
  # Explicitly enable the required methods
  UsePAM: 'yes'
  PasswordAuthentication: 'no'
  PubKeyAuthentication: 'yes'
  # No 2FA possible with iaas from mgmt
  "Match User iaas Address %{hiera('netcfg_mgmt_netpart')}.0/24":
    AuthenticationMethods: 'publickey'
