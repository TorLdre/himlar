---
network::interfaces_hash:
  'eth1':
    onboot:    'yes'
    mtu:       '1500'
    ipaddress: "%{hiera('netcfg_mgmt_netpart')}.19"
    netmask:   "%{hiera('netcfg_mgmt_netmask')}"

# disable sensuclassic
profile::monitoring::sensu::agent::enable_agent:      false
profile::monitoring::sensu::server::manage_dashboard: false
profile::monitoring::sensu::server::manage_rabbitmq:  false
profile::monitoring::sensu::server::manage_redis:     false
profile::monitoring::sensu::server::manage_graphite:  false
profile::monitoring::sensu::server::manage_firewall:  false
profile::monitoring::sensu::server::manage_resources: false
profile::monitoring::statsd::manage:                  false
profile::messaging::rabbitmq::manage:                 false
profile::database::redis::manage:                     false
profile::monitoring::graphite::manage_firewall:       true

# Hack repo to enable the correct ones
profile::base::yumrepo::repo_hash:
  sensu:
    ensure: absent
  rdo-release:
    ensure: absent
  sensu-community:
    ensure: present
  yarn: #temp repo
    ensure: present
  nodesource: # this repo will break statsd, use sensu statsd instead
    ensure: present
  epel: # should be absent when using RDO, but whitelist can also work
    ensure:   present
    includepkgs: 'collectd* htop bash-completion-extras statsd python2-pip nagios-plugins-openmanage nagios-common perl-Config-Tiny perl-Crypt-DES perl-Digest* libuv perl-Net-SNMP npm python-sqlite3dbm python-tzlocal python-cairocffi'

#
# setup sensu go
#
profile::base::common::manage_sysctl: true
profile::base::common::sysctl_values:
  'fs.inotify.max_user_watches':
    value: 524288

profile::base::common::packages:
  'jq':                     { ensure: absent }
  'python-openstackclient': { ensure: absent }
  'openstack-selinux':      { ensure: absent }
  'gcc-c++':                { ensure: absent }
  'make':                   { ensure: absent }

# enable sensu go
include:
  default:
    - profile::monitoring::sensu::backend

profile::monitoring::sensu::backend::manage_dashboard:  true
profile::monitoring::sensu::backend::manage_firewall:   true
profile::monitoring::sensu::backend::manage:            true

# profile::monitoring::sensu::backend::namespaces:
#   '%{::location}':  { ensure: present }

profile::monitoring::sensu::agent::bonsai_assets:
  sensu/sensu-slack-handler:
    version: 1.4.0
    namespace: "%{hiera('sensu_namespace')}"
  sensu/sensu-go-graphite-handler:
    version: 0.5.2
    namespace: "%{hiera('sensu_namespace')}"

profile::monitoring::sensu::backend::handlers:
  default:
    namespace:      "%{hiera('sensu_namespace')}"
    type:           'set'
    handlers:
      - slack
  keepalive:
    namespace: "%{hiera('sensu_namespace')}"
    type: 'set'
    handlers:
      - default
  slack:
    namespace:      "%{hiera('sensu_namespace')}"
    type:           'pipe'
    env_vars:       ["SLACK_WEBHOOK_URL=%{hiera('slack_webhook')}"]
    command:        "sensu-slack-handler --channel '#iam' --webhook-url ${SLACK_WEBHOOK_URL}"
    runtime_assets:
      - sensu/sensu-slack-handler
    filters:
      - is_incident
      - not_silenced
      - hourly
    timeout: 0
  graphite_udp:
    namespace:      "%{hiera('sensu_namespace')}"
    type:           'udp'
    socket:
      host:         '127.0.0.1'
      port:         2003
    mutator:        'only_check_output'
    filters:
      - has_metrics
    timeout: 10
  graphite:
    ensure:     present
    namespace:  "%{hiera('sensu_namespace')}"
    type: pipe
    command: sensu-go-graphite-handler --host 127.0.0.1 --port 2003 --prefix sensu #--no-prefix
    filters:
      - has_metrics
    runtime_assets:
      - sensu/sensu-go-graphite-handler
    timeout: 10

sensu::resources::filters:
  hourly:
    ensure: present
    action: allow
    expressions:
      - 'event.check.occurrences == 1 || event.check.occurrences % (3600 / event.check.interval) == 0'

profile::monitoring::sensu::agent::enable_go_agent:     true
profile::monitoring::sensu::agent::purge_check:         true
profile::monitoring::sensu::agent::merge_strategy:      'first'
profile::monitoring::sensu::agent::checks:
  cpu-checks:
    ensure:                 present
    command:                'check-cpu.rb -w 75 -c 90'
    interval:               60
    subscriptions:          ['base']
    namespace:              "%{hiera('sensu_namespace')}"
    handlers:               ['default']
  vmstat_metric:
    ensure:                 present
    command:                'metrics-vmstat.rb --scheme common'
    interval:               60
    subscriptions:          ['metrics']
    output_metric_handlers: ['graphite']
    output_metric_format:   graphite_plaintext
    namespace:              "%{hiera('sensu_namespace')}"
  ping_metric:
    ensure:                 present
    command:                'metrics-ping.rb --scheme common.vagrant-api-01 -h vagrant-api-01.mgmt.vagrant.iaas.intern'
    interval:               60
    subscriptions:          ['entity:%{hostname}']
    output_metric_handlers: ['graphite']
    output_metric_format:   graphite_plaintext
    namespace:              "%{hiera('sensu_namespace')}"
    proxy_entity_name:      vagrant-api-01
